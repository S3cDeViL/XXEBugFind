/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bugfind.xxe;

import bugfind.sootadapters.CallSite;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Mikosh
 */
public class ActualVulnerabilityItem {
    private VulnerabilityDefinitionItem vulnerabilityDefinitionItem;
    private List<CallSite> occurrencesList;
    private String reason;

    public ActualVulnerabilityItem(VulnerabilityDefinitionItem vulnerabilityDefinitionItem) {
        this(vulnerabilityDefinitionItem, null, null);
    }
    
    public ActualVulnerabilityItem(VulnerabilityDefinitionItem vulnerabilityDefinitionItem, List<CallSite> occurrences, String reason) {
        this.vulnerabilityDefinitionItem = vulnerabilityDefinitionItem;
        this.occurrencesList = (occurrences == null) ? new ArrayList<CallSite>() :occurrences;
        this.reason = reason;
    }

    public VulnerabilityDefinitionItem getVulnerabilityDefinitionItem() {
        return vulnerabilityDefinitionItem;
    }

    public List<CallSite> getOccurrencesList() {
        return occurrencesList;
    }    
    
    public boolean addVulnerabilityOccurrence(CallSite location) {
        return getOccurrencesList().add(location);
    }
    
    public void addVulnerabilityOccurrences(List<CallSite> listCallsites) {
        if (listCallsites != null) {
            for (CallSite cs : listCallsites) {
                occurrencesList.add(cs);
            }
        }
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(this.vulnerabilityDefinitionItem.getMethodDefinition()).append(".");
        
        if (occurrencesList.size() >0) {
            sb.append("\n").append(occurrencesList.size()).append(" occurrence(s) at: \n");
        
            for (CallSite cs : occurrencesList) {
                sb.append("* class: ").append(cs.getEdge().src().getDeclaringClass().getName()).append(" method: ")
                        .append(cs.getEdge().src().getDeclaration()).append(" at line ").append(cs.getLineLocation())
                        .append("\n");
            }
            sb.deleteCharAt(sb.length()-1);
        }
        
        
                
        return sb.toString(); //To change body of generated methods, choose Tools | Templates.
    }

    public void setReason(String reason) {
        this.reason = reason;
    }

    public String getReason() {
        return reason;
    }
    
    
}
